# Generated by Django 5.0.7 on 2024-07-31 07:40

import django.db.models.deletion
import django_jsonform.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TaxClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Tax Class',
                'verbose_name_plural': 'Tax Classes',
            },
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.PositiveSmallIntegerField(choices=[(1, 'General'), (2, 'Taxation'), (3, 'Shipping')], default=1)),
                ('key', models.CharField(max_length=120)),
                ('schema', models.JSONField(blank=True, null=True)),
                ('value', django_jsonform.models.fields.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Configuration',
                'verbose_name_plural': 'Configurations',
                'unique_together': {('group', 'key')},
            },
        ),
        migrations.CreateModel(
            name='TaxRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_code', models.CharField(blank=True, help_text='A 2 digit country code, e.g. IN. Leave Blank to apply to all.', max_length=2)),
                ('state_code', models.CharField(blank=True, help_text='A 2 digit state code, e.g. DL. Leave Blank to apply to all.', max_length=2)),
                ('postcode', models.CharField(blank=True, help_text='Postcode for this rule. Semi-colon (;) separate multiple values. Leave blank to apply to all areas. Wildcards (*) and ranges for numeric postcodes (e.g. 12345...12350) can also be used.', max_length=150)),
                ('city_code', models.CharField(blank=True, help_text='Cities for this rule. Semi-colon (;) separate multiple values. Leave blank to apply to all cities.', max_length=150)),
                ('rate', models.FloatField()),
                ('name', models.CharField(max_length=120)),
                ('priority', models.PositiveSmallIntegerField(blank=True, default=1, help_text='Choose a priority for this tax rate. Only 1 matching rate per priority will be used. To define multiple tax rates for a single area you need to specify a different priority per rate.')),
                ('compounding', models.BooleanField(blank=True, default=False, help_text='Choose whether or not this is a compound rate. Compound tax rates are applied on top of other tax rates.')),
                ('shipping', models.BooleanField(blank=True, default=False, help_text='Choose whether or not this tax rate also gets applied to shipping.')),
                ('taxclass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.taxclass')),
            ],
            options={
                'verbose_name': 'Tax Rate',
                'verbose_name_plural': 'Tax Rates',
            },
        ),
    ]
